name: BUILD

on:
  push:
    branches: [master]
  pull_request:
    branches: [develop]
  watch:
    types: [started]

jobs:
  build:
    runs-on: macos-11.0
    if: github.event.repository.owner.id == github.event.sender.id
    env:
      TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      SSH_PUBKEY: ${{secrets.SSH_PUBKEY}}
      TUNNEL_HOST: ${{secrets.TUNNEL_HOST}}

    steps:
      - name: SSH Tunnel
        run: |
          mkdir -p $HOME/.ssh
          cat <<< ${SSH_PRIVATE_KEY} > $HOME/.ssh/id_rsa
          cat <<< ${SSH_PUBKEY} > $HOME/.ssh/authorized_keys
          sed 's/-----BEGIN OPENSSH PRIVATE KEY-----/-----BEGIN-OPENSSH-PRIVATE-KEY-----/' ~/.ssh/id_rsa|
          sed 's/-----END OPENSSH PRIVATE KEY-----/-----END-OPENSSH-PRIVATE-KEY-----/' |
          sed "s/ /\n/g"|sed 's/-----BEGIN-OPENSSH-PRIVATE-KEY-----/-----BEGIN OPENSSH PRIVATE KEY-----/'|
          sed 's/-----END-OPENSSH-PRIVATE-KEY-----/-----END OPENSSH PRIVATE KEY-----/'|
          tee  ~/.ssh/id_rsa > /dev/null 2>&1
          chmod 600 $HOME/.ssh/id_rsa
          chmod 600 $HOME/.ssh/authorized_keys
          chmod 700 $HOME/.ssh
          random_port=$(jot -r 1 20000 65000)
          if [[ -n "${TELEGRAM_BOT_TOKEN}" && -n "${TELEGRAM_CHAT_ID}" ]]; then
              TELEGRAM_LOG="/tmp/telegram.log"
              SSH_CMD="ssh runner@${TUNNEL_HOST} -p $random_port"
              MSG="
              *GitHub Actions - IINA-Plus SSH tunnel info:*
              ⚡ *CLI:*
              \`${SSH_CMD}\`
              "
              echo -e "Sending message to Telegram..."
              curl -sSX POST "${TELEGRAM_API_URL:-https://api.telegram.org}/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
                  -d "disable_web_page_preview=true" \
                  -d "parse_mode=Markdown" \
                  -d "chat_id=${TELEGRAM_CHAT_ID}" \
                  -d "text=${MSG}" >${TELEGRAM_LOG}
              TELEGRAM_STATUS=$(cat ${TELEGRAM_LOG} | jq -r .ok)
              if [[ ${TELEGRAM_STATUS} != true ]]; then
                  echo -e "Telegram message sending failed: $(cat ${TELEGRAM_LOG})"
              else
                  echo -e "Telegram message sent successfully!"
              fi
          fi
          screen -dmS ngrok bash -c \
              "ssh -CNTR $random_port:127.0.0.1:22 -oStrictHostKeyChecking=no -oServerAliveInterval=30 -oServerAliveCountMax=60 -C ubuntu@${TUNNEL_HOST} -v 2>&1"

      - uses: actions/checkout@v2

      - name: modify scheme
        run: |
          sed -i "" 's/iina:\/\//iinadv:\/\//g' IINA+/Utils/YouGetJSON.swift
          sed -i "" 's/iina:\/\//iinadv:\/\//g' IINA+/Utils/Processes.swift
          sed -i "" 's/IINA.app/IINA-Danmaku.app/g' IINA+/Utils/Processes.swift
          sed -i "" 's/IINA.app/IINA-Danmaku.app/g' IINA+/Views/Preferences/GereralViewController.swift
      - name: Build
        run: |
          # carthage bootstrap --platform macOS --use-xcframeworks
          (cd IINA+/WebFiles/;npm install)
          rm -fr ./IINA+.xcodeproj/project.xcworkspace/xcshareddata/swiftpm/Package.resolved || true
          xcodebuild -workspace iina+.xcodeproj/project.xcworkspace/ -scheme IINA+ CODE_SIGNING_ALLOWED=NO -configuration Release
      - name: 设置版本号
        run: echo "ReleaseVersion=`date +%Y%m%d`" >> $GITHUB_ENV
      - name: 打包app
        run: |
          rm -rf ./artifact/
          mkdir -p ./artifact/release
          cd ~/Library/Developer/Xcode/DerivedData/IINA+-*/Build/Products/Release
          tar cvzf IINA+.tgz IINA+.app
          cd -
          find ~/Library/Developer/Xcode/DerivedData/IINA+-*/Build/Products/Release -name "IINA+.tgz" | xargs -I {} mv -f {} ./artifact/release/
      - uses: 'marvinpinto/action-automatic-releases@latest'
        with:
          repo_token: '${{ secrets.GITHUB_TOKEN }}'
          prerelease: false
          automatic_release_tag: ${{ env.ReleaseVersion }}
          title: ${{ env.ReleaseVersion }}
          files: |
            ./artifact/release/*
      - name: 上传 IINA+.app
        uses: actions/upload-artifact@v2
        with:
          name: IINA+.app
          path: ./artifact/release/

      - name: SSH 连接到 Actions
        uses: P3TERX/ssh2actions@main
        if: ${{ failure() }}
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
